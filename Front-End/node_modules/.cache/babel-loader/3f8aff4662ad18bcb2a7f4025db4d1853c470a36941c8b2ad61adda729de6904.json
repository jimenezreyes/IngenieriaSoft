{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Escritorio/2024-1/Ingenieria/PROYECTO/IngenieriaSoft/Front-End/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Register.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [apellido, setApellido] = useState('');\n  const [correo, setCorreo] = useState('');\n  const [contrasena, setContrasena] = useState('');\n  const handleRegistro = async e => {\n    e.preventDefault();\n\n    // Aquí puedes enviar los datos al servidor para el registro\n    const datosRegistro = {\n      nombre,\n      apellido,\n      correo,\n      password: contrasena\n    };\n    console.log('Datos de registro:', datosRegistro);\n    // Luego, puedes realizar una solicitud al servidor para manejar el registro.\n    const res = await fetch(`http://127.0.0.1:5000/register`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(datosRegistro)\n    });\n    const data = await res.json();\n  };\n  const navigate = useNavigate();\n  const handleClick = () => {\n    navigate(-1); // Navegar hacia atrás\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registro\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegistro,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nombre\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nombre\",\n        name: \"nombre\",\n        value: nombre,\n        onChange: e => setNombre(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"apellido\",\n        children: \"Apellido:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"apellido\",\n        name: \"apellido\",\n        value: apellido,\n        onChange: e => setApellido(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"correo\",\n        children: \"Correo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"correo\",\n        name: \"correo\",\n        value: correo,\n        onChange: e => setCorreo(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contrasena\",\n        children: \"Contrase\\xF1a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"contrasena\",\n        name: \"contrasena\",\n        value: contrasena,\n        onChange: e => setContrasena(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegistro,\n            children: \"Registrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            children: \"Volver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"bSUzTLvRzEdw579CTZW6ujcQbCs=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","nombre","setNombre","apellido","setApellido","correo","setCorreo","contrasena","setContrasena","handleRegistro","e","preventDefault","datosRegistro","password","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","navigate","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/gabriela/Escritorio/2024-1/Ingenieria/PROYECTO/IngenieriaSoft/Front-End/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Register.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Register() {\n  const [nombre, setNombre] = useState('');\n  const [apellido, setApellido] = useState('');\n  const [correo, setCorreo] = useState('');\n  const [contrasena, setContrasena] = useState('');\n\n  const handleRegistro = async (e) => {\n    e.preventDefault();\n\n    // Aquí puedes enviar los datos al servidor para el registro\n    const datosRegistro = {\n      nombre,\n      apellido,\n      correo,\n      password: contrasena,\n    };\n\n    console.log('Datos de registro:', datosRegistro);\n    // Luego, puedes realizar una solicitud al servidor para manejar el registro.\n    const res = await fetch(`http://127.0.0.1:5000/register`,{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(datosRegistro)\n    });\n    const data = await res.json();\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(-1); // Navegar hacia atrás\n  };\n\n  return (\n    <div className=\"registro\">\n      <h1>Registro</h1>      \n      <form onSubmit={handleRegistro}>\n        <label htmlFor=\"nombre\">Nombre:</label>\n        <input\n          type=\"text\"\n          id=\"nombre\"\n          name=\"nombre\"\n          value={nombre}\n          onChange={(e) => setNombre(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"apellido\">Apellido:</label>\n        <input\n          type=\"text\"\n          id=\"apellido\"\n          name=\"apellido\"\n          value={apellido}\n          onChange={(e) => setApellido(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"correo\">Correo:</label>\n        <input\n          type=\"email\"\n          id=\"correo\"\n          name=\"correo\"\n          value={correo}\n          onChange={(e) => setCorreo(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"contrasena\">Contraseña:</label>\n        <input\n          type=\"password\"\n          id=\"contrasena\"\n          name=\"contrasena\"\n          value={contrasena}\n          onChange={(e) => setContrasena(e.target.value)}\n          required\n        />\n        <ul> \n          <li>\n            <button onClick={handleRegistro}>Registrar</button>\n          </li>   \n          <li>\n            <button onClick={handleClick}>Volver</button>\n          </li>          \n        </ul> \n      </form>\n    </div>\n  );\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}